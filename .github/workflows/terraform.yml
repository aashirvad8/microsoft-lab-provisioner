name: Terraform Deploy & Destroy (Azure)

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose Terraform action'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      PREFIX: "lab"
      LOCATION: "eastus"
      CONTAINER_NAME: "tfstate"

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Generate Unique Resource Names
      id: names
      run: |
        RG_NAME="${{ env.PREFIX }}-tfstate-rg-${RANDOM}"
        STORAGE_ACCOUNT_NAME="${{ env.PREFIX }}tfstate$RANDOM"
        echo "RG_NAME=$RG_NAME" >> $GITHUB_ENV
        echo "STORAGE_ACCOUNT_NAME=$STORAGE_ACCOUNT_NAME" >> $GITHUB_ENV

        # Save backend info for later steps or runs
        echo "RG_NAME=$RG_NAME" > backend-info.env
        echo "STORAGE_ACCOUNT_NAME=$STORAGE_ACCOUNT_NAME" >> backend-info.env

    # Upload backend info artifact (to reuse in destroy job if needed)
    - name: Upload backend info artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-info
        path: backend-info.env

    # Download backend info artifact if destroying
    - name: Download backend info artifact
      if: ${{ github.event.inputs.action == 'destroy' }}
      uses: actions/download-artifact@v4
      with:
        name: backend-info

    - name: Load backend info variables
      run: |
        source backend-info.env
        echo "RG_NAME=$RG_NAME"
        echo "STORAGE_ACCOUNT_NAME=$STORAGE_ACCOUNT_NAME"
      shell: bash

    - name: Create Azure Storage Account for Terraform State
      if: ${{ github.event.inputs.action == 'apply' }}
      run: |
        az group create --name $RG_NAME --location $LOCATION
        az storage account create \
          --name $STORAGE_ACCOUNT_NAME \
          --resource-group $RG_NAME \
          --location $LOCATION \
          --sku Standard_LRS \
          --encryption-services blob
        az storage container create \
          --name $CONTAINER_NAME \
          --account-name $STORAGE_ACCOUNT_NAME

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.5

    - name: Terraform Init
      env:
        ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
        ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
        ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
        ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
      run: |
        terraform init -reconfigure \
          -backend-config="resource_group_name=$RG_NAME" \
          -backend-config="storage_account_name=$STORAGE_ACCOUNT_NAME" \
          -backend-config="container_name=$CONTAINER_NAME" \
          -backend-config="key=terraform.tfstate"

    - name: Terraform Plan
      if: ${{ github.event.inputs.action == 'apply' }}
      env:
        ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
        ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
        ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
        ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
      run: terraform plan

    - name: Terraform Apply
      if: ${{ github.event.inputs.action == 'apply' }}
      env:
        ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
        ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
        ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
        ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
      run: terraform apply -auto-approve

    - name: Terraform Destroy
      if: ${{ github.event.inputs.action == 'destroy' }}
      env:
        ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
        ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
        ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
        ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
      run: terraform destroy -auto-approve

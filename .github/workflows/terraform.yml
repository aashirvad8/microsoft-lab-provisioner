name: Terraform Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: "Choose Terraform action"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.5

    - name: Create dynamic backend (if apply)
      if: github.event.inputs.action == 'apply'
      run: |
        RG_NAME="tfstate-rg-${{ github.run_id }}"
        STORAGE_ACCOUNT_NAME="tfstate${{ github.run_id }}"
        CONTAINER_NAME="tfstate"

        echo "RG_NAME=$RG_NAME" >> $GITHUB_ENV
        echo "STORAGE_ACCOUNT_NAME=$STORAGE_ACCOUNT_NAME" >> $GITHUB_ENV
        echo "CONTAINER_NAME=$CONTAINER_NAME" >> $GITHUB_ENV

        az group create --name $RG_NAME --location eastus
        az storage account create --name $STORAGE_ACCOUNT_NAME --resource-group $RG_NAME --location eastus --sku Standard_LRS
        az storage container create --name $CONTAINER_NAME --account-name $STORAGE_ACCOUNT_NAME

    - name: Terraform Init
      env:
        ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
        ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
        ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
        ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
      run: |
        terraform init \
          -backend-config="resource_group_name=${{ env.RG_NAME }}" \
          -backend-config="storage_account_name=${{ env.STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ env.CONTAINER_NAME }}" \
          -backend-config="key=terraform.tfstate"

    - name: Terraform Plan or Apply/Destroy
      env:
        ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
        ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
        ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
        ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
      run: |
        if [ "${{ github.event.inputs.action }}" == "destroy" ]; then
          terraform destroy -auto-approve
        else
          terraform apply -auto-approve
        fi

    - name: Cleanup backend RG (if destroy)
      if: github.event.inputs.action == 'destroy'
      run: |
        echo "Deleting backend RG: ${{ env.RG_NAME }}"
        az group delete --name ${{ env.RG_NAME }} --yes --no-wait
